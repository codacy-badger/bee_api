apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: dbdata
  name: dbdata
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: db
  name: db
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: db
    spec:
      containers:
      - env:
        - name: DB
          valueFrom:
            configMapKeyRef:
              key: db
              name: db-config
        - name: HOST
          valueFrom:
            configMapKeyRef:
              key: host
              name: db-config
        - name: PORT
          valueFrom:
            configMapKeyRef:
              key: port
              name: db-config
        - name: PWD
          valueFrom:
            secretKeyRef:
              name: passwords
              key: db-password
        - name: USER
          valueFrom:
            configMapKeyRef:
              key: user
              name: db-config
        - name: WEB_DB
          valueFrom:
            configMapKeyRef:
              key: db
              name: db-config
        - name: WEB_PWD
          valueFrom:
            secretKeyRef:
              name: passwords
              key: app-password
        - name: WEB_USER
          valueFrom:
            configMapKeyRef:
              key: web-user
              name: db-config
        image: postgres
        name: db
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: dbdata
      hostname: db
      restartPolicy: Always
      volumes:
      - name: dbdata
        persistentVolumeClaim:
          claimName: dbdata
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  type: NodePort
  ports:
   - port: 5432
     targetPort: 5432
  selector:
    io.kompose.service: db